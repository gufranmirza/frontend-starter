{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport * as vars from \"../../core/Theme/vars\";\nimport Typography from 'antd/lib/typography';\nimport { Ripple } from 'react-awesome-spinners';\nimport { AppContainer } from \"../../core/Components/AppContainer\";\nimport axios from 'axios';\nimport * as styles from \"./styles\";\nconst {\n  Title\n} = Typography;\n\nclass Authenticate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      token\n    } = this.props;\n    console.log(this.props, token);\n    axios.post(`${Config().ServiceURI}${url}`, body).then(res => {\n      console.log(res);\n      return {\n        data: res.data,\n        status: res.status\n      };\n    }).catch(e => {\n      console.log(e);\n      return undefined;\n    }); // const res = await Post('authenticate', {\n    //   Token: token,\n    // });\n    // console.log('Not Authenticated', res);\n    // if (res !== undefined && res.status === 200) {\n    //   console.log('Authenticated', res);\n    // } else {\n    //   console.log('Not Authenticated', res);\n    // }\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(styles.Root, null, loading && __jsx(styles.Container, null, __jsx(Ripple, {\n      color: vars.Blue6\n    }), \" \", __jsx(\"br\", null), __jsx(Typography.Paragraph, null, ' ', \"We are securely logging you in, please wait ...\"))), __jsx(styles.Info, null, __jsx(Title, {\n      level: 4,\n      style: {\n        fontWeight: 'normal',\n        color: vars.HeadingColor1,\n        margin: 0,\n        fontSize: '18px',\n        textAlign: 'center',\n        paddingTop: '25px',\n        paddingBottom: '25px'\n      }\n    }, __jsx(AppContainer, null, \"After submitting login details, we'll send you an email link to login .\"))));\n  }\n\n}\n\nexport default Authenticate;","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/Containers/StartSession/index.tsx"],"names":["React","vars","Typography","Ripple","AppContainer","axios","styles","Title","Authenticate","Component","constructor","props","state","loading","componentDidMount","token","console","log","post","Config","ServiceURI","url","body","then","res","data","status","catch","e","undefined","componentWillUnmount","render","Blue6","fontWeight","color","HeadingColor1","margin","fontSize","textAlign","paddingTop","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,IAAZ;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,YAAT;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYL,UAAlB;;AAUA,MAAMM,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAAyD;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKJ,KAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAAwBI,KAAxB;AACAV,IAAAA,KAAK,CACFa,IADH,CACS,GAAEC,MAAM,GAAGC,UAAW,GAAEC,GAAI,EADrC,EACwCC,IADxC,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACA,aAAO;AACLC,QAAAA,IAAI,EAAED,GAAG,CAACC,IADL;AAELC,QAAAA,MAAM,EAAEF,GAAG,CAACE;AAFP,OAAP;AAID,KARH,EASGC,KATH,CASSC,CAAC,IAAI;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACA,aAAOC,SAAP;AACD,KAZH,EAHkB,CAiBlB;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAS;AAC3Bd,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AAEDc,EAAAA,MAAM,GAAQ;AACZ,UAAM;AAAElB,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,WACE,mBACE,MAAC,MAAD,CAAQ,IAAR,QACGC,OAAO,IACN,MAAC,MAAD,CAAQ,SAAR,QACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ,IAAI,CAAC+B;AAApB,MADF,OACgC,iBADhC,EAEE,MAAC,UAAD,CAAY,SAAZ,QACG,GADH,oDAFF,CAFJ,CADF,EAYE,MAAC,MAAD,CAAQ,IAAR,QACE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,QADP;AAELC,QAAAA,KAAK,EAAEjC,IAAI,CAACkC,aAFP;AAGLC,QAAAA,MAAM,EAAE,CAHH;AAILC,QAAAA,QAAQ,EAAE,MAJL;AAKLC,QAAAA,SAAS,EAAE,QALN;AAMLC,QAAAA,UAAU,EAAE,MANP;AAOLC,QAAAA,aAAa,EAAE;AAPV;AAFT,OAYE,MAAC,YAAD,kFAZF,CADF,CAZF,CADF;AAkCD;;AA9EsD;;AAgFzD,eAAehC,YAAf","sourcesContent":["import React from 'react';\n\nimport * as vars from '@/core/Theme/vars';\nimport Typography from 'antd/lib/typography';\nimport { Ripple } from 'react-awesome-spinners';\nimport { AppContainer } from '@/core/Components/AppContainer';\nimport { Post } from '@/core/http/requests';\nimport { Router } from 'next/router';\nimport axios from 'axios';\nimport * as styles from './styles';\n\nconst { Title } = Typography;\n\ntype State = {\n  loading: boolean;\n};\n\ntype Props = {\n  token: string;\n};\n\nclass Authenticate extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { token } = this.props;\n    console.log(this.props, token);\n    axios\n      .post(`${Config().ServiceURI}${url}`, body)\n      .then(res => {\n        console.log(res);\n        return {\n          data: res.data,\n          status: res.status,\n        };\n      })\n      .catch(e => {\n        console.log(e);\n        return undefined;\n      });\n\n    // const res = await Post('authenticate', {\n    //   Token: token,\n    // });\n\n    // console.log('Not Authenticated', res);\n\n    // if (res !== undefined && res.status === 200) {\n    //   console.log('Authenticated', res);\n    // } else {\n    //   console.log('Not Authenticated', res);\n    // }\n  }\n\n  componentWillUnmount(): void {\n    console.log('componentWillUnmount');\n  }\n\n  render(): any {\n    const { loading } = this.state;\n    return (\n      <div>\n        <styles.Root>\n          {loading && (\n            <styles.Container>\n              <Ripple color={vars.Blue6} /> <br />\n              <Typography.Paragraph>\n                {' '}\n                We are securely logging you in, please wait ...\n              </Typography.Paragraph>\n            </styles.Container>\n          )}\n        </styles.Root>\n        <styles.Info>\n          <Title\n            level={4}\n            style={{\n              fontWeight: 'normal',\n              color: vars.HeadingColor1,\n              margin: 0,\n              fontSize: '18px',\n              textAlign: 'center',\n              paddingTop: '25px',\n              paddingBottom: '25px',\n            }}\n          >\n            <AppContainer>\n              After submitting login details, we&apos;ll send you an email link\n              to login .\n            </AppContainer>\n          </Title>\n        </styles.Info>\n      </div>\n    );\n  }\n}\nexport default Authenticate;\n"]},"metadata":{},"sourceType":"module"}