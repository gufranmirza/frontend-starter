{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter, ValidMessage } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from \"./styles\";\nvar Title = Typography.Title;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {// you can now do stuff with the form.\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateName\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        name: value\n      });\n\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateEmail\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        email: value\n      });\n\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateDesignation\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        designation: value\n      });\n\n      return undefined;\n    });\n\n    _this.state = {\n      email: '',\n      company: '',\n      designation: '',\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          designation = _this$state.designation,\n          company = _this$state.company;\n      return __jsx(styles.Root, null, __jsx(Form, {\n        onSubmit: this.handleSubmit\n      }, function (_ref) {\n        var formProps = _ref.formProps;\n        return __jsx(\"form\", _extends({}, formProps, {\n          name: \"validation-example\"\n        }), __jsx(Field, {\n          label: \"Company Name\",\n          isRequired: true,\n          name: \"company-name\",\n          validate: validate,\n          defaultValue: \"\"\n        }, function (_ref2) {\n          var fieldProps = _ref2.fieldProps,\n              error = _ref2.error,\n              valid = _ref2.meta.valid;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), valid && __jsx(ValidMessage, null, \"Your wish granted\"), error === 'INCORRECT_PHRASE' && __jsx(ErrorMessage, null, \"Incorrect, try \\u2018open sesame\\u2019\"));\n        }), __jsx(Field, {\n          label: \"Work Email\",\n          isRequired: true,\n          name: \"work-email\",\n          validate: validate,\n          defaultValue: \"\"\n        }, function (_ref3) {\n          var fieldProps = _ref3.fieldProps,\n              error = _ref3.error,\n              valid = _ref3.meta.valid;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), valid && __jsx(ValidMessage, null, \"Your wish granted\"), error === 'INCORRECT_PHRASE' && __jsx(ErrorMessage, null, \"Incorrect, try \\u2018open sesame\\u2019\"));\n        }), __jsx(Field, {\n          label: \"Your Name\",\n          isRequired: true,\n          name: \"your-name\",\n          validate: validate,\n          defaultValue: \"\"\n        }, function (_ref4) {\n          var fieldProps = _ref4.fieldProps,\n              error = _ref4.error,\n              valid = _ref4.meta.valid;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), valid && __jsx(ValidMessage, null, \"Your wish granted\"), error === 'INCORRECT_PHRASE' && __jsx(ErrorMessage, null, \"Incorrect, try \\u2018open sesame\\u2019\"));\n        }), __jsx(Field, {\n          label: \"Designation\",\n          isRequired: true,\n          name: \"your-name\",\n          validate: validate,\n          defaultValue: \"\"\n        }, function (_ref5) {\n          var fieldProps = _ref5.fieldProps,\n              error = _ref5.error,\n              valid = _ref5.meta.valid;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), valid && __jsx(ValidMessage, null, \"Your wish granted\"), error === 'INCORRECT_PHRASE' && __jsx(ErrorMessage, null, \"Incorrect, try \\u2018open sesame\\u2019\"));\n        }), __jsx(FormFooter, null, __jsx(Button, {\n          style: {\n            height: '40px'\n          },\n          shouldFitContainer: true,\n          type: \"submit\",\n          appearance: \"primary\"\n        }, \"Sign Up & Post A Job\")));\n      }), __jsx(Title, {\n        level: 5,\n        style: {\n          marginTop: '20px',\n          fontWeight: 500,\n          textAlign: 'center'\n        }\n      }, \"Already have an account?\", ' ', __jsx(Link, {\n        href: \"/login\"\n      }, __jsx(\"a\", {\n        href: \"/login\"\n      }, \"Log in\"))));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/Containers/Signup/Form/index.tsx"],"names":["React","Component","Typography","Link","Button","Form","ErrorMessage","Field","FormFooter","ValidMessage","Textfield","styles","Title","props","value","setState","name","undefined","email","designation","state","company","handleSubmit","formProps","validate","fieldProps","error","valid","meta","height","marginTop","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\n\nimport Button from '@atlaskit/button';\nimport Form, {\n  ErrorMessage,\n  Field,\n  FormFooter,\n  ValidMessage,\n} from '@atlaskit/form';\n\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from './styles';\n\nconst { Title } = Typography;\n\ntype Props = {};\n\ntype State = {\n  name: string;\n  email: string;\n  company: string;\n  designation: string;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      company: '',\n      designation: '',\n      name: '',\n    };\n  }\n\n  handleSubmit = (): void => {\n    // you can now do stuff with the form.\n  };\n\n  validateName = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ name: value });\n    return undefined;\n  };\n\n  validateEmail = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ email: value });\n    return undefined;\n  };\n\n  validateDesignation = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ designation: value });\n    return undefined;\n  };\n\n  render(): any {\n    const { name, email, designation, company } = this.state;\n    return (\n      <styles.Root>\n        <Form onSubmit={this.handleSubmit}>\n          {({ formProps }) => (\n            <form {...formProps} name=\"validation-example\">\n              <Field\n                label=\"Company Name\"\n                isRequired\n                name=\"company-name\"\n                validate={validate}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error, meta: { valid } }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {valid && <ValidMessage>Your wish granted</ValidMessage>}\n                    {error === 'INCORRECT_PHRASE' && (\n                      <ErrorMessage>\n                        Incorrect, try &lsquo;open sesame&rsquo;\n                      </ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <Field\n                label=\"Work Email\"\n                isRequired\n                name=\"work-email\"\n                validate={validate}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error, meta: { valid } }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {valid && <ValidMessage>Your wish granted</ValidMessage>}\n                    {error === 'INCORRECT_PHRASE' && (\n                      <ErrorMessage>\n                        Incorrect, try &lsquo;open sesame&rsquo;\n                      </ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <Field\n                label=\"Your Name\"\n                isRequired\n                name=\"your-name\"\n                validate={validate}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error, meta: { valid } }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {valid && <ValidMessage>Your wish granted</ValidMessage>}\n                    {error === 'INCORRECT_PHRASE' && (\n                      <ErrorMessage>\n                        Incorrect, try &lsquo;open sesame&rsquo;\n                      </ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <Field\n                label=\"Designation\"\n                isRequired\n                name=\"your-name\"\n                validate={validate}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error, meta: { valid } }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {valid && <ValidMessage>Your wish granted</ValidMessage>}\n                    {error === 'INCORRECT_PHRASE' && (\n                      <ErrorMessage>\n                        Incorrect, try &lsquo;open sesame&rsquo;\n                      </ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <FormFooter>\n                <Button\n                  style={{ height: '40px' }}\n                  shouldFitContainer\n                  type=\"submit\"\n                  appearance=\"primary\"\n                >\n                  Sign Up & Post A Job\n                </Button>\n              </FormFooter>\n            </form>\n          )}\n        </Form>\n        <Title\n          level={5}\n          style={{\n            marginTop: '20px',\n            fontWeight: 500,\n            textAlign: 'center',\n          }}\n        >\n          Already have an account?{' '}\n          <Link href=\"/login\">\n            <a href=\"/login\">Log in</a>\n          </Link>\n        </Title>\n      </styles.Root>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}