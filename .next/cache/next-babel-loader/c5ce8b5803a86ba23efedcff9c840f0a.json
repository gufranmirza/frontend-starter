{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport { ValidateEmail } from \"../../../core/validations/email\";\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from \"./styles\";\nvar Title = Typography.Title;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      var email = _this.state.email;\n\n      if (!ValidateEmail(email)) {\n        _this.setState({\n          valid: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      _this.setState({\n        email: e.target.value\n      });\n    });\n\n    _this.state = {\n      email: '',\n      valid: true\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          valid = _this$state.valid;\n      return __jsx(styles.Root, null, __jsx(Form, {\n        onSubmit: this.handleSubmit\n      }, function (_ref) {\n        var formProps = _ref.formProps;\n        return __jsx(\"form\", _extends({}, formProps, {\n          name: \"validation-example\"\n        }), __jsx(Field, {\n          label: \"Work Email\",\n          isRequired: true,\n          name: \"work-email\",\n          defaultValue: \"\"\n        }, function (_ref2) {\n          var fieldProps = _ref2.fieldProps;\n          return __jsx(React.Fragment, null, __jsx(Textfield, _extends({}, fieldProps, {\n            value: email,\n            onChange: _this2.onChange\n          })), !valid && __jsx(ErrorMessage, null, \"Incorrect, try \\u2018open sesame\\u2019\"));\n        }), __jsx(FormFooter, null, __jsx(Button, {\n          style: {\n            height: '40px'\n          },\n          shouldFitContainer: true,\n          type: \"submit\",\n          appearance: \"primary\",\n          onClick: function onClick() {\n            _this2.handleSubmit();\n          }\n        }, \"Login\")));\n      }), __jsx(Title, {\n        level: 5,\n        style: {\n          marginTop: '20px',\n          fontWeight: 500,\n          textAlign: 'center'\n        }\n      }, \"Don't have an account?\", ' ', __jsx(Link, {\n        href: \"/signup\"\n      }, __jsx(\"a\", {\n        href: \"/signup\"\n      }, \"Register\"))));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/Containers/Login/Form/index.tsx"],"names":["React","Component","Typography","Link","ValidateEmail","Button","Form","ErrorMessage","Field","FormFooter","Textfield","styles","Title","props","email","state","setState","valid","e","target","value","handleSubmit","formProps","fieldProps","onChange","height","marginTop","fontWeight","textAlign"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,aAAT;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,IACEC,YADF,EAEEC,KAFF,EAGEC,UAHF,QAKO,gBALP;AAOA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAO,KAAKC,MAAZ;IAEQC,K,GAAUV,U,CAAVU,K;;AAYR;;;;;;AAEE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,mEAQJ,YAAY;AAAA,UACjBC,KADiB,GACP,MAAKC,KADE,CACjBD,KADiB;;AAEzB,UAAI,CAACV,aAAa,CAACU,KAAD,CAAlB,EAA2B;AACzB,cAAKE,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,KAbkB;;AAAA,+DAeR,UAACC,CAAD,EAA2C;AACpD,YAAKF,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEI,CAAC,CAACC,MAAF,CAASC;AADJ,OAAd;AAGD,KAnBkB;;AAEjB,UAAKL,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;6BAea;AAAA;;AAAA,wBACa,KAAKF,KADlB;AAAA,UACJD,KADI,eACJA,KADI;AAAA,UACGG,KADH,eACGA,KADH;AAEZ,aACE,MAAC,MAAD,CAAQ,IAAR,QACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKI;AAArB,SACG;AAAA,YAAGC,SAAH,QAAGA,SAAH;AAAA,eACC,2BAAUA,SAAV;AAAqB,UAAA,IAAI,EAAC;AAA1B,YACE,MAAC,KAAD;AACE,UAAA,KAAK,EAAC,YADR;AAEE,UAAA,UAAU,MAFZ;AAGE,UAAA,IAAI,EAAC,YAHP;AAIE,UAAA,YAAY,EAAC;AAJf,WAMG;AAAA,cAAGC,UAAH,SAAGA,UAAH;AAAA,iBACC,4BACE,MAAC,SAAD,eACMA,UADN;AAEE,YAAA,KAAK,EAAET,KAFT;AAGE,YAAA,QAAQ,EAAE,MAAI,CAACU;AAHjB,aADF,EAMG,CAACP,KAAD,IACC,MAAC,YAAD,iDAPJ,CADD;AAAA,SANH,CADF,EAsBE,MAAC,UAAD,QACE,MAAC,MAAD;AACE,UAAA,KAAK,EAAE;AAAEQ,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,kBAAkB,MAFpB;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,UAAU,EAAC,SAJb;AAKE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACJ,YAAL;AACD;AAPH,mBADF,CAtBF,CADD;AAAA,OADH,CADF,EAyCE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,KAAK,EAAE;AACLK,UAAAA,SAAS,EAAE,MADN;AAELC,UAAAA,UAAU,EAAE,GAFP;AAGLC,UAAAA,SAAS,EAAE;AAHN;AAFT,mCAQ8B,GAR9B,EASE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SACE;AAAG,QAAA,IAAI,EAAC;AAAR,oBADF,CATF,CAzCF,CADF;AAyDD;;;;EAjF0B3B,S","sourcesContent":["import React, { Component, SyntheticEvent } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport { NextRouter } from 'next/router';\nimport { ValidateEmail } from '@/core/validations/email';\n\nimport Button from '@atlaskit/button';\nimport Form, {\n  ErrorMessage,\n  Field,\n  FormFooter,\n  ValidMessage,\n} from '@atlaskit/form';\n\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from './styles';\n\nconst { Title } = Typography;\n\ntype Props = {\n  router: NextRouter;\n  authenticate: any;\n};\n\ntype State = {\n  email: string;\n  valid: boolean;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      valid: true,\n    };\n  }\n\n  handleSubmit = (): void => {\n    const { email } = this.state;\n    if (!ValidateEmail(email)) {\n      this.setState({ valid: false });\n    }\n  };\n\n  onChange = (e: { target: HTMLInputElement }): void => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  render(): any {\n    const { email, valid } = this.state;\n    return (\n      <styles.Root>\n        <Form onSubmit={this.handleSubmit}>\n          {({ formProps }) => (\n            <form {...formProps} name=\"validation-example\">\n              <Field\n                label=\"Work Email\"\n                isRequired\n                name=\"work-email\"\n                defaultValue=\"\"\n              >\n                {({ fieldProps }: any) => (\n                  <>\n                    <Textfield\n                      {...fieldProps}\n                      value={email}\n                      onChange={this.onChange}\n                    />\n                    {!valid && (\n                      <ErrorMessage>\n                        Incorrect, try &lsquo;open sesame&rsquo;\n                      </ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <FormFooter>\n                <Button\n                  style={{ height: '40px' }}\n                  shouldFitContainer\n                  type=\"submit\"\n                  appearance=\"primary\"\n                  onClick={() => {\n                    this.handleSubmit();\n                  }}\n                >\n                  Login\n                </Button>\n              </FormFooter>\n            </form>\n          )}\n        </Form>\n        <Title\n          level={5}\n          style={{\n            marginTop: '20px',\n            fontWeight: 500,\n            textAlign: 'center',\n          }}\n        >\n          Don&apos;t have an account?{' '}\n          <Link href=\"/signup\">\n            <a href=\"/signup\">Register</a>\n          </Link>\n        </Title>\n      </styles.Root>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}