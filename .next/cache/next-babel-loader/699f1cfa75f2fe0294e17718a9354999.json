{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as vars from \"../../core/Theme/vars\";\nimport Typography from 'antd/lib/typography';\nimport { Ripple } from 'react-awesome-spinners';\nimport { AppContainer } from \"../../core/Components/AppContainer\";\nimport { Config } from \"../../core/config\";\nimport axios from 'axios';\nimport * as styles from \"./styles\";\nvar Title = Typography.Title;\n\nvar Authenticate = /*#__PURE__*/function (_React$Component) {\n  _inherits(Authenticate, _React$Component);\n\n  var _super = _createSuper(Authenticate);\n\n  function Authenticate(props) {\n    var _this;\n\n    _classCallCheck(this, Authenticate);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Authenticate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          token = _this$props.token,\n          router = _this$props.router;\n      console.log(this.props, token);\n      axios.post(\"\".concat(Config().ServiceURI, \"authenticate\"), {\n        Token: token\n      }).then(function (res) {\n        var status = res.status,\n            data = res.data;\n\n        if (data !== undefined && status === 200) {\n          router.push('/');\n        } else {\n          router.push('/login');\n        }\n      })[\"catch\"](function (e) {\n        router.push('/login');\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('componentWillUnmount');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      return __jsx(\"div\", null, __jsx(styles.Root, null, loading && __jsx(styles.Container, null, __jsx(Ripple, {\n        color: vars.Blue6\n      }), \" \", __jsx(\"br\", null), __jsx(Typography.Paragraph, null, ' ', \"We are securely logging you in, please wait ...\"))), __jsx(styles.Info, null, __jsx(Title, {\n        level: 4,\n        style: {\n          fontWeight: 'normal',\n          color: vars.HeadingColor1,\n          margin: 0,\n          fontSize: '18px',\n          textAlign: 'center',\n          paddingTop: '25px',\n          paddingBottom: '25px'\n        }\n      }, __jsx(AppContainer, null, \"After submitting login details, we'll send you an email link to login .\"))));\n    }\n  }]);\n\n  return Authenticate;\n}(React.Component);\n\nexport default Authenticate;","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/Containers/StartSession/index.tsx"],"names":["React","vars","Typography","Ripple","AppContainer","Config","axios","styles","Title","Authenticate","props","state","loading","token","router","console","log","post","ServiceURI","Token","then","res","status","data","undefined","push","e","Blue6","fontWeight","color","HeadingColor1","margin","fontSize","textAlign","paddingTop","paddingBottom","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,IAAZ;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,YAAT;AAGA,SAASC,MAAT;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ;IAEQC,K,GAAUN,U,CAAVM,K;;IAWFC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA,wBACQ,KAAKF,KADb;AAAA,UACVG,KADU,eACVA,KADU;AAAA,UACHC,MADG,eACHA,MADG;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAAwBG,KAAxB;AAEAP,MAAAA,KAAK,CACFW,IADH,WACWZ,MAAM,GAAGa,UADpB,mBAC8C;AAC1CC,QAAAA,KAAK,EAAEN;AADmC,OAD9C,EAIGO,IAJH,CAIQ,UAAAC,GAAG,EAAI;AAAA,YACHC,MADG,GACcD,GADd,CACHC,MADG;AAAA,YACKC,IADL,GACcF,GADd,CACKE,IADL;;AAEX,YAAIA,IAAI,KAAKC,SAAT,IAAsBF,MAAM,KAAK,GAArC,EAA0C;AACxCR,UAAAA,MAAM,CAACW,IAAP,CAAY,GAAZ;AACD,SAFD,MAEO;AACLX,UAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACD;AACF,OAXH,WAYS,UAAAC,CAAC,EAAI;AACVZ,QAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACD,OAdH;AAeD;;;2CAE4B;AAC3BV,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;;6BAEa;AAAA,UACJJ,OADI,GACQ,KAAKD,KADb,CACJC,OADI;AAEZ,aACE,mBACE,MAAC,MAAD,CAAQ,IAAR,QACGA,OAAO,IACN,MAAC,MAAD,CAAQ,SAAR,QACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEX,IAAI,CAAC0B;AAApB,QADF,OACgC,iBADhC,EAEE,MAAC,UAAD,CAAY,SAAZ,QACG,GADH,oDAFF,CAFJ,CADF,EAYE,MAAC,MAAD,CAAQ,IAAR,QACE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,QADP;AAELC,UAAAA,KAAK,EAAE5B,IAAI,CAAC6B,aAFP;AAGLC,UAAAA,MAAM,EAAE,CAHH;AAILC,UAAAA,QAAQ,EAAE,MAJL;AAKLC,UAAAA,SAAS,EAAE,QALN;AAMLC,UAAAA,UAAU,EAAE,MANP;AAOLC,UAAAA,aAAa,EAAE;AAPV;AAFT,SAYE,MAAC,YAAD,kFAZF,CADF,CAZF,CADF;AAkCD;;;;EArEwBnC,KAAK,CAACoC,S;;AAuEjC,eAAe3B,YAAf","sourcesContent":["import React from 'react';\n\nimport * as vars from '@/core/Theme/vars';\nimport Typography from 'antd/lib/typography';\nimport { Ripple } from 'react-awesome-spinners';\nimport { AppContainer } from '@/core/Components/AppContainer';\nimport { Post } from '@/core/http/requests';\nimport { NextRouter } from 'next/router';\nimport { Config } from '@/core/config';\n\nimport axios from 'axios';\nimport * as styles from './styles';\n\nconst { Title } = Typography;\n\ntype State = {\n  loading: boolean;\n};\n\ntype Props = {\n  token: string;\n  router: NextRouter;\n};\n\nclass Authenticate extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { token, router } = this.props;\n    console.log(this.props, token);\n\n    axios\n      .post(`${Config().ServiceURI}authenticate`, {\n        Token: token,\n      })\n      .then(res => {\n        const { status, data } = res;\n        if (data !== undefined && status === 200) {\n          router.push('/');\n        } else {\n          router.push('/login');\n        }\n      })\n      .catch(e => {\n        router.push('/login');\n      });\n  }\n\n  componentWillUnmount(): void {\n    console.log('componentWillUnmount');\n  }\n\n  render(): any {\n    const { loading } = this.state;\n    return (\n      <div>\n        <styles.Root>\n          {loading && (\n            <styles.Container>\n              <Ripple color={vars.Blue6} /> <br />\n              <Typography.Paragraph>\n                {' '}\n                We are securely logging you in, please wait ...\n              </Typography.Paragraph>\n            </styles.Container>\n          )}\n        </styles.Root>\n        <styles.Info>\n          <Title\n            level={4}\n            style={{\n              fontWeight: 'normal',\n              color: vars.HeadingColor1,\n              margin: 0,\n              fontSize: '18px',\n              textAlign: 'center',\n              paddingTop: '25px',\n              paddingBottom: '25px',\n            }}\n          >\n            <AppContainer>\n              After submitting login details, we&apos;ll send you an email link\n              to login .\n            </AppContainer>\n          </Title>\n        </styles.Info>\n      </div>\n    );\n  }\n}\nexport default Authenticate;\n"]},"metadata":{},"sourceType":"module"}