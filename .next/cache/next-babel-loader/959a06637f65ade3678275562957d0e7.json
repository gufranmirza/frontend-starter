{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport * as vars from \"../../core/Theme/vars\";\nimport Typography from 'antd/lib/typography';\nimport { Ripple } from 'react-awesome-spinners';\nimport { AppContainer } from \"../../core/Components/AppContainer\";\nimport { Config } from \"../../core/config\";\nimport Cookies from 'universal-cookie';\nimport message from 'antd/lib/message';\nimport axios from 'axios';\nimport * as styles from \"./styles\";\nconst {\n  Title\n} = Typography;\n\nconst errorNotification = () => {\n  message.error({\n    duration: 4,\n    content: 'We could not authenticate your login request. Please try again with new login link',\n    style: {\n      marginTop: '100px'\n    }\n  });\n};\n\nclass Authenticate extends React.Component {\n  componentDidMount() {\n    const {\n      token,\n      router,\n      authenticate\n    } = this.props;\n    const cookies = new Cookies();\n    axios.post(`${Config().ServiceURI}/authenticate`, {\n      Token: token\n    }).then(res => {\n      const {\n        status,\n        data\n      } = res;\n\n      if (data !== undefined && status === 200) {\n        cookies.set('session', data.AccessToken, {\n          path: '/'\n        });\n        authenticate(true);\n        router.push('/');\n      } else {\n        authenticate(false);\n        errorNotification();\n        setTimeout(() => {\n          router.push('/login');\n        }, 4000);\n      }\n    }).catch(() => {\n      authenticate(false);\n      errorNotification();\n      setTimeout(() => {\n        router.push('/login');\n      }, 4000);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(styles.Root, null, __jsx(styles.Container, null, __jsx(Ripple, {\n      color: vars.Blue6\n    }), \" \", __jsx(\"br\", null), __jsx(Typography.Paragraph, null, ' ', \"We are securely logging you in, please wait ...\"))), __jsx(styles.Info, null, __jsx(Title, {\n      level: 5,\n      style: {\n        fontWeight: 'normal',\n        color: vars.HeadingColor1,\n        margin: 0,\n        textAlign: 'center',\n        paddingTop: '25px',\n        paddingBottom: '25px'\n      }\n    }, __jsx(AppContainer, null, \"You will be redirected to the requested webpage after authentication is completed\"))));\n  }\n\n}\n\nexport default Authenticate;","map":null,"metadata":{},"sourceType":"module"}