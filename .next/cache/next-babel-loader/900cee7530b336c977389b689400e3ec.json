{"ast":null,"code":"import { useIsAuthenticated } from \"../Providers/AuthProvider\";\nimport withConditionalRedirect from \"./withConditionalRedirect\";\n/**\n * Require the user to be authenticated in order to render the component.\n * If the user isn't authenticated, forward to the given URL.\n */\n\nexport default function withAuth(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/login';\n  return withConditionalRedirect({\n    WrappedComponent: WrappedComponent,\n    location: location,\n    clientCondition: _s(function withAuthClientCondition() {\n      _s();\n\n      return !useIsAuthenticated();\n    }, \"b+7Eump91pavJ5JFuri3qr9RzRU=\", false, function () {\n      return [useIsAuthenticated];\n    }),\n    serverCondition: function withAuthServerCondition(ctx) {\n      var _ctx$req;\n\n      return !((_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.cookies.session);\n    }\n  });\n}","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/core/Components/HOCS/withAuth.tsx"],"names":["useIsAuthenticated","withConditionalRedirect","withAuth","WrappedComponent","location","clientCondition","withAuthClientCondition","serverCondition","withAuthServerCondition","ctx","req","cookies","session"],"mappings":"AACA,SAASA,kBAAT;AACA,OAAOC,uBAAP;AAEA;;;;;AAIA,eAAe,SAASC,QAAT,CACbC,gBADa,EAGK;AAAA;;AAAA,MADlBC,QACkB,uEADP,QACO;AAClB,SAAOH,uBAAuB,CAAC;AAC7BE,IAAAA,gBAAgB,EAAhBA,gBAD6B;AAE7BC,IAAAA,QAAQ,EAARA,QAF6B;AAG7BC,IAAAA,eAAe,KAAE,SAASC,uBAAT,GAAmC;AAAA;;AAClD,aAAO,CAACN,kBAAkB,EAA1B;AACD,KAFc;AAAA,cACLA,kBADK;AAAA,MAHc;AAM7BO,IAAAA,eAAe,EAAE,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAA;;AACrD,aAAO,cAACA,GAAG,CAACC,GAAL,6CAAC,SAASC,OAAT,CAAiBC,OAAlB,CAAP;AACD;AAR4B,GAAD,CAA9B;AAUD","sourcesContent":["import { NextPage } from 'next';\nimport { useIsAuthenticated } from '@/core/Components/Providers/AuthProvider';\nimport withConditionalRedirect from './withConditionalRedirect';\n\n/**\n * Require the user to be authenticated in order to render the component.\n * If the user isn't authenticated, forward to the given URL.\n */\nexport default function withAuth<CP, IP>(\n  WrappedComponent: NextPage<CP, IP>,\n  location = '/login',\n): NextPage<CP, IP> {\n  return withConditionalRedirect({\n    WrappedComponent,\n    location,\n    clientCondition: function withAuthClientCondition() {\n      return !useIsAuthenticated();\n    },\n    serverCondition: function withAuthServerCondition(ctx) {\n      return !ctx.req?.cookies.session;\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}