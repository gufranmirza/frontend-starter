{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from \"./styles\";\nvar Title = Typography.Title;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      var email = _this.state.email;\n\n      if (!ValidateEmail(email)) {\n        _this.setState({\n          valid: false\n        });\n\n        return;\n      }\n\n      axios.post(\"\".concat(Config().ServiceURI, \"/login\"), {\n        Email: email\n      }).then(function (res) {\n        var status = res.status,\n            data = res.data;\n\n        if (data !== undefined && status === 200) {\n          successNotification(\"A login link has been successfully sent on the email address \".concat(email, \". Please click on the link to proceed. \"));\n\n          _this.setState({\n            email: ''\n          });\n        } else {\n          errorNotification(data.Error);\n        }\n      })[\"catch\"](function (error) {\n        var response = error.response;\n\n        if (response !== undefined && response.data !== undefined) {\n          errorNotification(response.data.Error);\n        } else {\n          errorNotification('Something went wrong, please try again');\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateCompany\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        company: value\n      });\n\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateName\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        name: value\n      });\n\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateEmail\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        email: value\n      });\n\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateDesignation\", function (value) {\n      if (value === '') {\n        return 'INCORRECT';\n      }\n\n      _this.setState({\n        designation: value\n      });\n\n      return undefined;\n    });\n\n    _this.state = {\n      email: '',\n      company: '',\n      designation: '',\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          designation = _this$state.designation,\n          company = _this$state.company;\n      return __jsx(styles.Root, null, __jsx(Form, {\n        onSubmit: this.handleSubmit\n      }, function (_ref) {\n        var formProps = _ref.formProps;\n        return __jsx(\"form\", _extends({}, formProps, {\n          name: \"validation-example\"\n        }), __jsx(Field, {\n          label: \"Company Name\",\n          isRequired: true,\n          name: \"company-name\",\n          validate: _this2.validateCompany,\n          defaultValue: \"\"\n        }, function (_ref2) {\n          var fieldProps = _ref2.fieldProps,\n              error = _ref2.error;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), error === 'INCORRECT' && __jsx(ErrorMessage, null, \"Please select a company you work for\"));\n        }), __jsx(Field, {\n          label: \"Work Email\",\n          isRequired: true,\n          name: \"work-email\",\n          validate: _this2.validateEmail,\n          defaultValue: \"\"\n        }, function (_ref3) {\n          var fieldProps = _ref3.fieldProps,\n              error = _ref3.error;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), error === 'INCORRECT' && __jsx(ErrorMessage, null, \"Incorrect email address\"));\n        }), __jsx(Field, {\n          label: \"Your Name\",\n          isRequired: true,\n          name: \"your-name\",\n          validate: _this2.validateName,\n          defaultValue: \"\"\n        }, function (_ref4) {\n          var fieldProps = _ref4.fieldProps,\n              error = _ref4.error;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), error === 'INCORRECT' && __jsx(ErrorMessage, null, \"Name can not be blank\"));\n        }), __jsx(Field, {\n          label: \"Designation\",\n          isRequired: true,\n          name: \"your-designation\",\n          validate: _this2.validateDesignation,\n          defaultValue: \"\"\n        }, function (_ref5) {\n          var fieldProps = _ref5.fieldProps,\n              error = _ref5.error;\n          return __jsx(React.Fragment, null, __jsx(Textfield, fieldProps), error === 'INCORRECT' && __jsx(ErrorMessage, null, \"Designation can not be blank\"));\n        }), __jsx(FormFooter, null, __jsx(Button, {\n          style: {\n            height: '40px'\n          },\n          shouldFitContainer: true,\n          type: \"submit\",\n          appearance: \"primary\"\n        }, \"Sign Up & Post A Job\")));\n      }), __jsx(Title, {\n        level: 5,\n        style: {\n          marginTop: '20px',\n          fontWeight: 500,\n          textAlign: 'center'\n        }\n      }, \"Already have an account?\", ' ', __jsx(Link, {\n        href: \"/login\"\n      }, __jsx(\"a\", {\n        href: \"/login\"\n      }, \"Log in\"))));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/Containers/Signup/Form/index.tsx"],"names":["React","Component","Typography","Link","Button","Form","ErrorMessage","Field","FormFooter","Textfield","styles","Title","props","email","state","ValidateEmail","setState","valid","axios","post","Config","ServiceURI","Email","then","res","status","data","undefined","successNotification","errorNotification","Error","error","response","value","company","name","designation","handleSubmit","formProps","validateCompany","fieldProps","validateEmail","validateName","validateDesignation","height","marginTop","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\n\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter } from '@atlaskit/form';\n\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from './styles';\n\nconst { Title } = Typography;\n\ntype Props = {};\n\ntype State = {\n  name: string;\n  email: string;\n  company: string;\n  designation: string;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      company: '',\n      designation: '',\n      name: '',\n    };\n  }\n\n  handleSubmit = (): void => {\n    const { email } = this.state;\n    if (!ValidateEmail(email)) {\n      this.setState({ valid: false });\n      return;\n    }\n\n    axios\n      .post(`${Config().ServiceURI}/login`, {\n        Email: email,\n      })\n      .then(res => {\n        const { status, data } = res;\n        if (data !== undefined && status === 200) {\n          successNotification(\n            `A login link has been successfully sent on the email address ${email}. Please click on the link to proceed. `,\n          );\n          this.setState({ email: '' });\n        } else {\n          errorNotification(data.Error);\n        }\n      })\n      .catch(error => {\n        const { response } = error;\n        if (response !== undefined && response.data !== undefined) {\n          errorNotification(response.data.Error);\n        } else {\n          errorNotification('Something went wrong, please try again');\n        }\n      });\n  };\n\n  validateCompany = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ company: value });\n    return undefined;\n  };\n\n  validateName = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ name: value });\n    return undefined;\n  };\n\n  validateEmail = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ email: value });\n    return undefined;\n  };\n\n  validateDesignation = (value: string): string => {\n    if (value === '') {\n      return 'INCORRECT';\n    }\n    this.setState({ designation: value });\n    return undefined;\n  };\n\n  render(): any {\n    const { name, email, designation, company } = this.state;\n    return (\n      <styles.Root>\n        <Form onSubmit={this.handleSubmit}>\n          {({ formProps }) => (\n            <form {...formProps} name=\"validation-example\">\n              <Field\n                label=\"Company Name\"\n                isRequired\n                name=\"company-name\"\n                validate={this.validateCompany}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {error === 'INCORRECT' && (\n                      <ErrorMessage>\n                        Please select a company you work for\n                      </ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <Field\n                label=\"Work Email\"\n                isRequired\n                name=\"work-email\"\n                validate={this.validateEmail}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {error === 'INCORRECT' && (\n                      <ErrorMessage>Incorrect email address</ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <Field\n                label=\"Your Name\"\n                isRequired\n                name=\"your-name\"\n                validate={this.validateName}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {error === 'INCORRECT' && (\n                      <ErrorMessage>Name can not be blank</ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <Field\n                label=\"Designation\"\n                isRequired\n                name=\"your-designation\"\n                validate={this.validateDesignation}\n                defaultValue=\"\"\n              >\n                {({ fieldProps, error }: any) => (\n                  <>\n                    <Textfield {...fieldProps} />\n                    {error === 'INCORRECT' && (\n                      <ErrorMessage>Designation can not be blank</ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <FormFooter>\n                <Button\n                  style={{ height: '40px' }}\n                  shouldFitContainer\n                  type=\"submit\"\n                  appearance=\"primary\"\n                >\n                  Sign Up & Post A Job\n                </Button>\n              </FormFooter>\n            </form>\n          )}\n        </Form>\n        <Title\n          level={5}\n          style={{\n            marginTop: '20px',\n            fontWeight: 500,\n            textAlign: 'center',\n          }}\n        >\n          Already have an account?{' '}\n          <Link href=\"/login\">\n            <a href=\"/login\">Log in</a>\n          </Link>\n        </Title>\n      </styles.Root>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}