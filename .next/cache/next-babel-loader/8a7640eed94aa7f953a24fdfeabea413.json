{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport { ValidateEmail } from \"../../../core/validations/email\";\nimport axios from 'axios';\nimport { Config } from \"../../../core/config\";\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from \"./styles\";\nconst {\n  Title\n} = Typography;\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      const {\n        authenticate,\n        router\n      } = this.props;\n      const {\n        email\n      } = this.state;\n\n      if (!ValidateEmail(email)) {\n        this.setState({\n          valid: false\n        });\n      }\n\n      axios.post(`${Config().ServiceURI}authenticate`, {\n        Token: token\n      }).then(res => {\n        const {\n          status,\n          data\n        } = res;\n\n        if (data !== undefined && status === 200) {\n          cookie.set('session', data.AccessToken);\n          authenticate(true);\n          router.push('/');\n        } else {\n          authenticate(false);\n          errorNotification();\n          setTimeout(() => {\n            router.push('/login');\n          }, 4000);\n        }\n      }).catch(() => {\n        authenticate(false);\n        errorNotification();\n        setTimeout(() => {\n          router.push('/login');\n        }, 4000);\n      });\n    });\n\n    _defineProperty(this, \"onChange\", e => {\n      this.setState({\n        email: e.target.value\n      });\n    });\n\n    this.state = {\n      email: '',\n      valid: true\n    };\n  }\n\n  render() {\n    const {\n      email,\n      valid\n    } = this.state;\n    return __jsx(styles.Root, null, __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, ({\n      formProps\n    }) => __jsx(\"form\", _extends({}, formProps, {\n      name: \"validation-example\"\n    }), __jsx(Field, {\n      label: \"Work Email\",\n      isRequired: true,\n      name: \"work-email\",\n      defaultValue: \"\"\n    }, ({\n      fieldProps\n    }) => __jsx(React.Fragment, null, __jsx(Textfield, _extends({}, fieldProps, {\n      value: email,\n      onChange: this.onChange\n    })), !valid && __jsx(ErrorMessage, null, \"Incorrect email address\"))), __jsx(FormFooter, null, __jsx(Button, {\n      style: {\n        height: '40px'\n      },\n      shouldFitContainer: true,\n      type: \"submit\",\n      appearance: \"primary\",\n      onClick: () => {\n        this.handleSubmit();\n      }\n    }, \"Login\")))), __jsx(Title, {\n      level: 5,\n      style: {\n        marginTop: '20px',\n        fontWeight: 500,\n        textAlign: 'center'\n      }\n    }, \"Don't have an account?\", ' ', __jsx(Link, {\n      href: \"/signup\"\n    }, __jsx(\"a\", {\n      href: \"/signup\"\n    }, \"Register\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/go/src/github.com/jobbox-tech/recruiter-ui/src/Containers/Login/Form/index.tsx"],"names":["React","Component","Typography","Link","ValidateEmail","axios","Config","Button","Form","ErrorMessage","Field","FormFooter","Textfield","styles","Title","constructor","props","authenticate","router","email","state","setState","valid","post","ServiceURI","Token","token","then","res","status","data","undefined","cookie","set","AccessToken","push","errorNotification","setTimeout","catch","e","target","value","render","handleSubmit","formProps","fieldProps","onChange","height","marginTop","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport { NextRouter } from 'next/router';\nimport { ValidateEmail } from '@/core/validations/email';\nimport axios from 'axios';\nimport { Config } from '@/core/config';\n\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter } from '@atlaskit/form';\n\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from './styles';\n\nconst { Title } = Typography;\n\ntype Props = {\n  router: NextRouter;\n  authenticate: any;\n};\n\ntype State = {\n  email: string;\n  valid: boolean;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      valid: true,\n    };\n  }\n\n  handleSubmit = (): void => {\n    const { authenticate, router } = this.props;\n    const { email } = this.state;\n    if (!ValidateEmail(email)) {\n      this.setState({ valid: false });\n    }\n\n    axios\n      .post(`${Config().ServiceURI}authenticate`, {\n        Token: token,\n      })\n      .then(res => {\n        const { status, data } = res;\n        if (data !== undefined && status === 200) {\n          cookie.set('session', data.AccessToken);\n          authenticate(true);\n          router.push('/');\n        } else {\n          authenticate(false);\n          errorNotification();\n          setTimeout(() => {\n            router.push('/login');\n          }, 4000);\n        }\n      })\n      .catch(() => {\n        authenticate(false);\n        errorNotification();\n        setTimeout(() => {\n          router.push('/login');\n        }, 4000);\n      });\n  };\n\n  onChange = (e: { target: HTMLInputElement }): void => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  render(): any {\n    const { email, valid } = this.state;\n    return (\n      <styles.Root>\n        <Form onSubmit={this.handleSubmit}>\n          {({ formProps }) => (\n            <form {...formProps} name=\"validation-example\">\n              <Field\n                label=\"Work Email\"\n                isRequired\n                name=\"work-email\"\n                defaultValue=\"\"\n              >\n                {({ fieldProps }: any) => (\n                  <>\n                    <Textfield\n                      {...fieldProps}\n                      value={email}\n                      onChange={this.onChange}\n                    />\n                    {!valid && (\n                      <ErrorMessage>Incorrect email address</ErrorMessage>\n                    )}\n                  </>\n                )}\n              </Field>\n              <FormFooter>\n                <Button\n                  style={{ height: '40px' }}\n                  shouldFitContainer\n                  type=\"submit\"\n                  appearance=\"primary\"\n                  onClick={() => {\n                    this.handleSubmit();\n                  }}\n                >\n                  Login\n                </Button>\n              </FormFooter>\n            </form>\n          )}\n        </Form>\n        <Title\n          level={5}\n          style={{\n            marginTop: '20px',\n            fontWeight: 500,\n            textAlign: 'center',\n          }}\n        >\n          Don&apos;t have an account?{' '}\n          <Link href=\"/signup\">\n            <a href=\"/signup\">Register</a>\n          </Link>\n        </Title>\n      </styles.Root>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}