{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Typography from 'antd/lib/typography';\nimport Link from 'next/link';\nimport { ValidateEmail } from \"../../../core/validations/email\";\nimport axios from 'axios';\nimport { Config } from \"../../../core/config\";\nimport message from 'antd/lib/message';\nimport Button from '@atlaskit/button';\nimport Form, { ErrorMessage, Field, FormFooter } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport * as styles from \"./styles\";\nconst {\n  Title\n} = Typography;\n\nconst errorNotification = m => {\n  message.error({\n    duration: 6,\n    content: m,\n    style: {\n      marginTop: '80px'\n    }\n  });\n};\n\nconst successNotification = m => {\n  message.success({\n    duration: 6,\n    content: m,\n    style: {\n      marginTop: '80px'\n    }\n  });\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      const {\n        email\n      } = this.state;\n\n      if (!ValidateEmail(email)) {\n        this.setState({\n          valid: false\n        });\n        return;\n      }\n\n      axios.post(`${Config().ServiceURI}/login`, {\n        Email: email\n      }).then(res => {\n        const {\n          status,\n          data\n        } = res;\n\n        if (data !== undefined && status === 200) {\n          successNotification(`A login link has been successfully sent on the email address ${email}. Please click on the link to proceed. `);\n          this.setState({\n            email: ''\n          });\n        } else {\n          errorNotification(data.Error);\n        }\n      }).catch(error => {\n        const {\n          response\n        } = error;\n\n        if (response !== undefined && response.data !== undefined) {\n          errorNotification(response.data.Error);\n        } else {\n          errorNotification('Something went wrong, please try again');\n        }\n      });\n    });\n\n    _defineProperty(this, \"onChange\", e => {\n      const {\n        value\n      } = e.target;\n\n      if (!ValidateEmail(value)) {\n        this.setState({\n          valid: false\n        });\n      } else {\n        this.setState({\n          valid: true\n        });\n      }\n\n      this.setState({\n        email: value\n      });\n    });\n\n    this.state = {\n      email: '',\n      valid: true\n    };\n  }\n\n  render() {\n    const {\n      email,\n      valid\n    } = this.state;\n    return __jsx(styles.Root, null, __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, ({\n      formProps\n    }) => __jsx(\"form\", _extends({}, formProps, {\n      name: \"validation-example\"\n    }), __jsx(Field, {\n      label: \"Work Email\",\n      isRequired: true,\n      name: \"work-email\",\n      defaultValue: \"\"\n    }, ({\n      fieldProps\n    }) => __jsx(React.Fragment, null, __jsx(Textfield, _extends({}, fieldProps, {\n      value: email,\n      onChange: this.onChange\n    })), !valid && __jsx(ErrorMessage, null, \"Incorrect email address\"))), __jsx(FormFooter, null, __jsx(Button, {\n      style: {\n        height: '40px'\n      },\n      shouldFitContainer: true,\n      type: \"submit\",\n      appearance: \"primary\"\n    }, \"Login\")))), __jsx(Title, {\n      level: 5,\n      style: {\n        marginTop: '20px',\n        fontWeight: 500,\n        textAlign: 'center'\n      }\n    }, \"Don't have an account?\", ' ', __jsx(Link, {\n      href: \"/signup\"\n    }, __jsx(\"a\", {\n      href: \"/signup\"\n    }, \"Register\"))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}