webpackHotUpdate("static/development/pages/_app.js",{

/***/ "./src/core/config/index.ts":
/*!**********************************!*\
  !*** ./src/core/config/index.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process, module) {/* eslint-disable */\n\n/**\n * Unified Configuration Reader\n *\n * This helper function allows you to use the same API in accessing configuration\n * values no matter where the code is being executed (i.e. browser/node).\n *\n * e.g.\n *   import config from '../config';\n *   config('welcomeMessage'); // => \"Hello World!\"\n */\n// PRIVATES\nvar configCache;\n/**\n * This resolves the correct configuration source based on the execution\n * environment.  For node we use the standard config file, however, for browsers\n * we need to access the configuration object that would have been bound to\n * the \"window\" by our \"reactApplication\" middleware.\n *\n * @return {Object} The executing environment configuration object.\n */\n\nfunction resolveConfigForBrowserOrServer() {\n  if (configCache) {\n    return configCache;\n  }\n\n  console.log(configCache); // NOTE: By using the \"process.env.BUILD_FLAG_IS_NODE\" flag here this block of code\n  // will be removed when \"process.env.BUILD_FLAG_IS_NODE === true\".\n  // If no \"BUILD_FLAG_IS_NODE\" env var is undefined we can assume that we are running outside\n  // of a webpack run, and will therefore return the config file.\n\n  if (typeof process.env.BUILD_FLAG_IS_NODE === 'undefined' || process.env.BUILD_FLAG_IS_NODE === 'true') {\n    // i.e. running in our server/node process.\n    configCache = __webpack_require__(/*! ./values */ \"./src/core/config/values.ts\")[\"default\"]; // eslint-disable-line global-require\n\n    return configCache;\n  }\n\n  console.log(configCache); // To get here we are likely running in the browser.\n\n  if ( true && typeof window.__CLIENT_CONFIG__ === 'object') {\n    // eslint-disable-line\n    configCache = window.__CLIENT_CONFIG__; // eslint-disable-line\n  } else {\n    // To get here we must be running in the browser.\n    console.warn('No client configuration object was bound to the window.'); // eslint-disable-line no-console\n\n    configCache = {};\n  }\n\n  return configCache;\n} // EXPORT\n\n/**\n * This function wraps up the boilerplate needed to access the correct\n * configuration depending on whether your code will get executed in the\n * browser/node.\n *\n * i.e.\n *  - For the browser the config values are available at window.__CLIENT_CONFIG__\n *  - For a node process they are within the \"<root>/config\".\n *\n * To request a configuration value you must provide the repective path. For\n * example, f you had the following configuration structure:\n *   {\n *     foo: {\n *       bar: [1, 2, 3]\n *     },\n *     bob: 'bob'\n *   }\n *\n * You could use this function to access \"bar\" like so:\n *   import config from '../config';\n *   const value = config('foo.bar');\n *\n * And you could access \"bob\" like so:\n *   import config from '../config';\n *   const value = config('bob');\n *\n * If any part of the path isn't available as a configuration key/value then\n * an error will be thrown indicating that a respective configuration value\n * could not be found at the given path.\n */\n\n\nfunction Get(path) {\n  var parts = typeof path === 'string' ? path.split('.') : path;\n\n  if (parts.length === 0) {\n    throw new Error('You must provide the path to the configuration value you would like to consume.');\n  }\n\n  var result = resolveConfigForBrowserOrServer();\n\n  for (var i = 0; i < parts.length; i += 1) {\n    if (result === undefined) {\n      var errorMessage = \"Failed to resolve configuration value at \\\"\".concat(parts.join('.'), \"\\\".\"); // This \"if\" block gets stripped away by webpack for production builds.\n\n      if (process.env.BUILD_FLAG_IS_DEV === 'true' && process.env.BUILD_FLAG_IS_CLIENT === 'true') {\n        throw new Error(\"\".concat(errorMessage, \" We have noticed that you are trying to access this configuration value from the client bundle (i.e. code that will be executed in a browser). For configuration values to be exposed to the client bundle you must ensure that the path is added to the client configuration filter in the project configuration values file.\"));\n      }\n\n      throw new Error(errorMessage);\n    }\n\n    result = result[parts[i]];\n  }\n\n  return result;\n}\n\n_c = Get;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Get);\n\nvar _c;\n\n$RefreshReg$(_c, \"Get\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9jb25maWcvaW5kZXgudHM/YmJhZCJdLCJuYW1lcyI6WyJjb25maWdDYWNoZSIsInJlc29sdmVDb25maWdGb3JCcm93c2VyT3JTZXJ2ZXIiLCJjb25zb2xlIiwibG9nIiwicHJvY2VzcyIsImVudiIsIkJVSUxEX0ZMQUdfSVNfTk9ERSIsInJlcXVpcmUiLCJ3aW5kb3ciLCJfX0NMSUVOVF9DT05GSUdfXyIsIndhcm4iLCJHZXQiLCJwYXRoIiwicGFydHMiLCJzcGxpdCIsImxlbmd0aCIsIkVycm9yIiwicmVzdWx0IiwiaSIsInVuZGVmaW5lZCIsImVycm9yTWVzc2FnZSIsImpvaW4iLCJCVUlMRF9GTEFHX0lTX0RFViIsIkJVSUxEX0ZMQUdfSVNfQ0xJRU5UIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBV0E7QUFJQSxJQUFJQSxXQUFKO0FBRUE7Ozs7Ozs7OztBQVFBLFNBQVNDLCtCQUFULEdBQWdFO0FBQzlELE1BQUlELFdBQUosRUFBaUI7QUFDZixXQUFPQSxXQUFQO0FBQ0Q7O0FBRURFLFNBQU8sQ0FBQ0MsR0FBUixDQUFZSCxXQUFaLEVBTDhELENBTzlEO0FBQ0E7QUFDQTtBQUNBOztBQUNBLE1BQ0UsT0FBT0ksT0FBTyxDQUFDQyxHQUFSLENBQVlDLGtCQUFuQixLQUEwQyxXQUExQyxJQUNHRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsa0JBQVosS0FBbUMsTUFGeEMsRUFHRTtBQUNBO0FBQ0FOLGVBQVcsR0FBR08sbUJBQU8sQ0FBQyw4Q0FBUixXQUFkLENBRkEsQ0FFMkM7O0FBQzNDLFdBQU9QLFdBQVA7QUFDRDs7QUFFREUsU0FBTyxDQUFDQyxHQUFSLENBQVlILFdBQVosRUFwQjhELENBc0I5RDs7QUFFQSxNQUFJLFNBQWlDLE9BQU9RLE1BQU0sQ0FBQ0MsaUJBQWQsS0FBb0MsUUFBekUsRUFBbUY7QUFBRTtBQUNuRlQsZUFBVyxHQUFHUSxNQUFNLENBQUNDLGlCQUFyQixDQURpRixDQUN6QztBQUN6QyxHQUZELE1BRU87QUFDTDtBQUNBUCxXQUFPLENBQUNRLElBQVIsQ0FBYSx5REFBYixFQUZLLENBRW9FOztBQUN6RVYsZUFBVyxHQUFHLEVBQWQ7QUFDRDs7QUFFRCxTQUFPQSxXQUFQO0FBQ0QsQyxDQUVEOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStCQSxTQUFTVyxHQUFULENBQWFDLElBQWIsRUFBd0I7QUFDdEIsTUFBTUMsS0FBSyxHQUFHLE9BQU9ELElBQVAsS0FBZ0IsUUFBaEIsR0FBMkJBLElBQUksQ0FBQ0UsS0FBTCxDQUFXLEdBQVgsQ0FBM0IsR0FBNkNGLElBQTNEOztBQUVBLE1BQUlDLEtBQUssQ0FBQ0UsTUFBTixLQUFpQixDQUFyQixFQUF3QjtBQUN0QixVQUFNLElBQUlDLEtBQUosQ0FDSixpRkFESSxDQUFOO0FBR0Q7O0FBRUQsTUFBSUMsTUFBTSxHQUFHaEIsK0JBQStCLEVBQTVDOztBQUVBLE9BQUssSUFBSWlCLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdMLEtBQUssQ0FBQ0UsTUFBMUIsRUFBa0NHLENBQUMsSUFBSSxDQUF2QyxFQUEwQztBQUN4QyxRQUFJRCxNQUFNLEtBQUtFLFNBQWYsRUFBMEI7QUFDeEIsVUFBTUMsWUFBWSx3REFBZ0RQLEtBQUssQ0FBQ1EsSUFBTixDQUNoRSxHQURnRSxDQUFoRCxRQUFsQixDQUR3QixDQUt4Qjs7QUFDQSxVQUNFakIsT0FBTyxDQUFDQyxHQUFSLENBQVlpQixpQkFBWixLQUFrQyxNQUFsQyxJQUNHbEIsT0FBTyxDQUFDQyxHQUFSLENBQVlrQixvQkFBWixLQUFxQyxNQUYxQyxFQUdFO0FBQ0EsY0FBTSxJQUFJUCxLQUFKLFdBQ0RJLFlBREMsb1VBQU47QUFHRDs7QUFDRCxZQUFNLElBQUlKLEtBQUosQ0FBVUksWUFBVixDQUFOO0FBQ0Q7O0FBRURILFVBQU0sR0FBR0EsTUFBTSxDQUFDSixLQUFLLENBQUNLLENBQUQsQ0FBTixDQUFmO0FBQ0Q7O0FBRUQsU0FBT0QsTUFBUDtBQUNEOztLQWpDUU4sRztBQW1DTUEsa0VBQWYiLCJmaWxlIjoiLi9zcmMvY29yZS9jb25maWcvaW5kZXgudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBVbmlmaWVkIENvbmZpZ3VyYXRpb24gUmVhZGVyXG4gKlxuICogVGhpcyBoZWxwZXIgZnVuY3Rpb24gYWxsb3dzIHlvdSB0byB1c2UgdGhlIHNhbWUgQVBJIGluIGFjY2Vzc2luZyBjb25maWd1cmF0aW9uXG4gKiB2YWx1ZXMgbm8gbWF0dGVyIHdoZXJlIHRoZSBjb2RlIGlzIGJlaW5nIGV4ZWN1dGVkIChpLmUuIGJyb3dzZXIvbm9kZSkuXG4gKlxuICogZS5nLlxuICogICBpbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7XG4gKiAgIGNvbmZpZygnd2VsY29tZU1lc3NhZ2UnKTsgLy8gPT4gXCJIZWxsbyBXb3JsZCFcIlxuICovXG5cbi8vIFBSSVZBVEVTXG5cblxuXG5sZXQgY29uZmlnQ2FjaGU7XG5cbi8qKlxuICogVGhpcyByZXNvbHZlcyB0aGUgY29ycmVjdCBjb25maWd1cmF0aW9uIHNvdXJjZSBiYXNlZCBvbiB0aGUgZXhlY3V0aW9uXG4gKiBlbnZpcm9ubWVudC4gIEZvciBub2RlIHdlIHVzZSB0aGUgc3RhbmRhcmQgY29uZmlnIGZpbGUsIGhvd2V2ZXIsIGZvciBicm93c2Vyc1xuICogd2UgbmVlZCB0byBhY2Nlc3MgdGhlIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgd291bGQgaGF2ZSBiZWVuIGJvdW5kIHRvXG4gKiB0aGUgXCJ3aW5kb3dcIiBieSBvdXIgXCJyZWFjdEFwcGxpY2F0aW9uXCIgbWlkZGxld2FyZS5cbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSBleGVjdXRpbmcgZW52aXJvbm1lbnQgY29uZmlndXJhdGlvbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVDb25maWdGb3JCcm93c2VyT3JTZXJ2ZXIoKTogUmVjb3JkPHN0cmluZywgYW55PiB7XG4gIGlmIChjb25maWdDYWNoZSkge1xuICAgIHJldHVybiBjb25maWdDYWNoZTtcbiAgfVxuXG4gIGNvbnNvbGUubG9nKGNvbmZpZ0NhY2hlKVxuXG4gIC8vIE5PVEU6IEJ5IHVzaW5nIHRoZSBcInByb2Nlc3MuZW52LkJVSUxEX0ZMQUdfSVNfTk9ERVwiIGZsYWcgaGVyZSB0aGlzIGJsb2NrIG9mIGNvZGVcbiAgLy8gd2lsbCBiZSByZW1vdmVkIHdoZW4gXCJwcm9jZXNzLmVudi5CVUlMRF9GTEFHX0lTX05PREUgPT09IHRydWVcIi5cbiAgLy8gSWYgbm8gXCJCVUlMRF9GTEFHX0lTX05PREVcIiBlbnYgdmFyIGlzIHVuZGVmaW5lZCB3ZSBjYW4gYXNzdW1lIHRoYXQgd2UgYXJlIHJ1bm5pbmcgb3V0c2lkZVxuICAvLyBvZiBhIHdlYnBhY2sgcnVuLCBhbmQgd2lsbCB0aGVyZWZvcmUgcmV0dXJuIHRoZSBjb25maWcgZmlsZS5cbiAgaWYgKFxuICAgIHR5cGVvZiBwcm9jZXNzLmVudi5CVUlMRF9GTEFHX0lTX05PREUgPT09ICd1bmRlZmluZWQnXG4gICAgfHwgcHJvY2Vzcy5lbnYuQlVJTERfRkxBR19JU19OT0RFID09PSAndHJ1ZSdcbiAgKSB7XG4gICAgLy8gaS5lLiBydW5uaW5nIGluIG91ciBzZXJ2ZXIvbm9kZSBwcm9jZXNzLlxuICAgIGNvbmZpZ0NhY2hlID0gcmVxdWlyZSgnLi92YWx1ZXMnKS5kZWZhdWx0OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGdsb2JhbC1yZXF1aXJlXG4gICAgcmV0dXJuIGNvbmZpZ0NhY2hlO1xuICB9XG5cbiAgY29uc29sZS5sb2coY29uZmlnQ2FjaGUpXG5cbiAgLy8gVG8gZ2V0IGhlcmUgd2UgYXJlIGxpa2VseSBydW5uaW5nIGluIHRoZSBicm93c2VyLlxuXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93Ll9fQ0xJRU5UX0NPTkZJR19fID09PSAnb2JqZWN0JykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgY29uZmlnQ2FjaGUgPSB3aW5kb3cuX19DTElFTlRfQ09ORklHX187IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgfSBlbHNlIHtcbiAgICAvLyBUbyBnZXQgaGVyZSB3ZSBtdXN0IGJlIHJ1bm5pbmcgaW4gdGhlIGJyb3dzZXIuXG4gICAgY29uc29sZS53YXJuKCdObyBjbGllbnQgY29uZmlndXJhdGlvbiBvYmplY3Qgd2FzIGJvdW5kIHRvIHRoZSB3aW5kb3cuJyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAgIGNvbmZpZ0NhY2hlID0ge307XG4gIH1cblxuICByZXR1cm4gY29uZmlnQ2FjaGU7XG59XG5cbi8vIEVYUE9SVFxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gd3JhcHMgdXAgdGhlIGJvaWxlcnBsYXRlIG5lZWRlZCB0byBhY2Nlc3MgdGhlIGNvcnJlY3RcbiAqIGNvbmZpZ3VyYXRpb24gZGVwZW5kaW5nIG9uIHdoZXRoZXIgeW91ciBjb2RlIHdpbGwgZ2V0IGV4ZWN1dGVkIGluIHRoZVxuICogYnJvd3Nlci9ub2RlLlxuICpcbiAqIGkuZS5cbiAqICAtIEZvciB0aGUgYnJvd3NlciB0aGUgY29uZmlnIHZhbHVlcyBhcmUgYXZhaWxhYmxlIGF0IHdpbmRvdy5fX0NMSUVOVF9DT05GSUdfX1xuICogIC0gRm9yIGEgbm9kZSBwcm9jZXNzIHRoZXkgYXJlIHdpdGhpbiB0aGUgXCI8cm9vdD4vY29uZmlnXCIuXG4gKlxuICogVG8gcmVxdWVzdCBhIGNvbmZpZ3VyYXRpb24gdmFsdWUgeW91IG11c3QgcHJvdmlkZSB0aGUgcmVwZWN0aXZlIHBhdGguIEZvclxuICogZXhhbXBsZSwgZiB5b3UgaGFkIHRoZSBmb2xsb3dpbmcgY29uZmlndXJhdGlvbiBzdHJ1Y3R1cmU6XG4gKiAgIHtcbiAqICAgICBmb286IHtcbiAqICAgICAgIGJhcjogWzEsIDIsIDNdXG4gKiAgICAgfSxcbiAqICAgICBib2I6ICdib2InXG4gKiAgIH1cbiAqXG4gKiBZb3UgY291bGQgdXNlIHRoaXMgZnVuY3Rpb24gdG8gYWNjZXNzIFwiYmFyXCIgbGlrZSBzbzpcbiAqICAgaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xuICogICBjb25zdCB2YWx1ZSA9IGNvbmZpZygnZm9vLmJhcicpO1xuICpcbiAqIEFuZCB5b3UgY291bGQgYWNjZXNzIFwiYm9iXCIgbGlrZSBzbzpcbiAqICAgaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xuICogICBjb25zdCB2YWx1ZSA9IGNvbmZpZygnYm9iJyk7XG4gKlxuICogSWYgYW55IHBhcnQgb2YgdGhlIHBhdGggaXNuJ3QgYXZhaWxhYmxlIGFzIGEgY29uZmlndXJhdGlvbiBrZXkvdmFsdWUgdGhlblxuICogYW4gZXJyb3Igd2lsbCBiZSB0aHJvd24gaW5kaWNhdGluZyB0aGF0IGEgcmVzcGVjdGl2ZSBjb25maWd1cmF0aW9uIHZhbHVlXG4gKiBjb3VsZCBub3QgYmUgZm91bmQgYXQgdGhlIGdpdmVuIHBhdGguXG4gKi9cblxuZnVuY3Rpb24gR2V0KHBhdGgpOiBhbnkge1xuICBjb25zdCBwYXJ0cyA9IHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJyA/IHBhdGguc3BsaXQoJy4nKSA6IHBhdGg7XG5cbiAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdZb3UgbXVzdCBwcm92aWRlIHRoZSBwYXRoIHRvIHRoZSBjb25maWd1cmF0aW9uIHZhbHVlIHlvdSB3b3VsZCBsaWtlIHRvIGNvbnN1bWUuJyxcbiAgICApO1xuICB9XG5cbiAgbGV0IHJlc3VsdCA9IHJlc29sdmVDb25maWdGb3JCcm93c2VyT3JTZXJ2ZXIoKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBgRmFpbGVkIHRvIHJlc29sdmUgY29uZmlndXJhdGlvbiB2YWx1ZSBhdCBcIiR7cGFydHMuam9pbihcbiAgICAgICAgJy4nLFxuICAgICAgKX1cIi5gO1xuXG4gICAgICAvLyBUaGlzIFwiaWZcIiBibG9jayBnZXRzIHN0cmlwcGVkIGF3YXkgYnkgd2VicGFjayBmb3IgcHJvZHVjdGlvbiBidWlsZHMuXG4gICAgICBpZiAoXG4gICAgICAgIHByb2Nlc3MuZW52LkJVSUxEX0ZMQUdfSVNfREVWID09PSAndHJ1ZSdcbiAgICAgICAgJiYgcHJvY2Vzcy5lbnYuQlVJTERfRkxBR19JU19DTElFTlQgPT09ICd0cnVlJ1xuICAgICAgKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgJHtlcnJvck1lc3NhZ2V9IFdlIGhhdmUgbm90aWNlZCB0aGF0IHlvdSBhcmUgdHJ5aW5nIHRvIGFjY2VzcyB0aGlzIGNvbmZpZ3VyYXRpb24gdmFsdWUgZnJvbSB0aGUgY2xpZW50IGJ1bmRsZSAoaS5lLiBjb2RlIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBpbiBhIGJyb3dzZXIpLiBGb3IgY29uZmlndXJhdGlvbiB2YWx1ZXMgdG8gYmUgZXhwb3NlZCB0byB0aGUgY2xpZW50IGJ1bmRsZSB5b3UgbXVzdCBlbnN1cmUgdGhhdCB0aGUgcGF0aCBpcyBhZGRlZCB0byB0aGUgY2xpZW50IGNvbmZpZ3VyYXRpb24gZmlsdGVyIGluIHRoZSBwcm9qZWN0IGNvbmZpZ3VyYXRpb24gdmFsdWVzIGZpbGUuYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpO1xuICAgIH1cblxuICAgIHJlc3VsdCA9IHJlc3VsdFtwYXJ0c1tpXV07XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBHZXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/config/index.ts\n");

/***/ })

})