webpackHotUpdate("static/development/pages/_app.js",{

/***/ "./src/core/config/index.ts":
/*!**********************************!*\
  !*** ./src/core/config/index.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process, module) {/* eslint-disable */\n\n/**\n * Unified Configuration Reader\n *\n * This helper function allows you to use the same API in accessing configuration\n * values no matter where the code is being executed (i.e. browser/node).\n *\n * e.g.\n *   import config from '../config';\n *   config('welcomeMessage'); // => \"Hello World!\"\n */\n// PRIVATES\nvar configCache;\n/**\n * This resolves the correct configuration source based on the execution\n * environment.  For node we use the standard config file, however, for browsers\n * we need to access the configuration object that would have been bound to\n * the \"window\" by our \"reactApplication\" middleware.\n *\n * @return {Object} The executing environment configuration object.\n */\n\nfunction resolveConfigForBrowserOrServer() {\n  if (configCache) {\n    return configCache;\n  } // NOTE: By using the \"process.env.BUILD_FLAG_IS_NODE\" flag here this block of code\n  // will be removed when \"process.env.BUILD_FLAG_IS_NODE === true\".\n  // If no \"BUILD_FLAG_IS_NODE\" env var is undefined we can assume that we are running outside\n  // of a webpack run, and will therefore return the config file.\n\n\n  if (typeof process.env.BUILD_FLAG_IS_NODE === 'undefined' || process.env.BUILD_FLAG_IS_NODE === 'true') {\n    // i.e. running in our server/node process.\n    configCache = __webpack_require__(/*! ./values */ \"./src/core/config/values.ts\")[\"default\"]; // eslint-disable-line global-require\n\n    return configCache;\n  } // To get here we are likely running in the browser.\n\n\n  if ( true && typeof window.__CLIENT_CONFIG__ === 'object') {\n    // eslint-disable-line\n    configCache = window.__CLIENT_CONFIG__; // eslint-disable-line\n  } else {\n    // To get here we must be running in the browser.\n    console.warn('No client configuration object was bound to the window.'); // eslint-disable-line no-console\n\n    configCache = {};\n  }\n\n  return configCache;\n} // EXPORT\n\n/**\n * This function wraps up the boilerplate needed to access the correct\n * configuration depending on whether your code will get executed in the\n * browser/node.\n *\n * i.e.\n *  - For the browser the config values are available at window.__CLIENT_CONFIG__\n *  - For a node process they are within the \"<root>/config\".\n *\n * To request a configuration value you must provide the repective path. For\n * example, f you had the following configuration structure:\n *   {\n *     foo: {\n *       bar: [1, 2, 3]\n *     },\n *     bob: 'bob'\n *   }\n *\n * You could use this function to access \"bar\" like so:\n *   import config from '../config';\n *   const value = config('foo.bar');\n *\n * And you could access \"bob\" like so:\n *   import config from '../config';\n *   const value = config('bob');\n *\n * If any part of the path isn't available as a configuration key/value then\n * an error will be thrown indicating that a respective configuration value\n * could not be found at the given path.\n */\n\n\nfunction Get(path) {\n  var parts = typeof path === 'string' ? path.split('.') : path;\n\n  if (parts.length === 0) {\n    throw new Error('You must provide the path to the configuration value you would like to consume.');\n  }\n\n  var result = resolveConfigForBrowserOrServer();\n\n  for (var i = 0; i < parts.length; i += 1) {\n    if (result === undefined) {\n      var errorMessage = \"Failed to resolve configuration value at \\\"\".concat(parts.join('.'), \"\\\".\"); // This \"if\" block gets stripped away by webpack for production builds.\n\n      if (process.env.BUILD_FLAG_IS_DEV === 'true' && process.env.BUILD_FLAG_IS_CLIENT === 'true') {\n        throw new Error(\"\".concat(errorMessage, \" We have noticed that you are trying to access this configuration value from the client bundle (i.e. code that will be executed in a browser). For configuration values to be exposed to the client bundle you must ensure that the path is added to the client configuration filter in the project configuration values file.\"));\n      }\n\n      throw new Error(errorMessage);\n    }\n\n    result = result[parts[i]];\n  }\n\n  return result;\n}\n\n_c = Get;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Get);\n\nvar _c;\n\n$RefreshReg$(_c, \"Get\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/config/index.ts\n");

/***/ })

})